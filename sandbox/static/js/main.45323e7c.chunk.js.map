{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notifications.js","utils/api.js","utils/graph.js","components/graph/CreateRootModal.js","components/graph/Menu.js","components/graph/ViewNodeModal.js","components/graph/CreateRelationModal.js","components/graph/NearGraph.js","components/utils/Cover.js","assets/img/logo.png","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","GAS","getNode","node_id","get_node","searchName","name","search_name","absolute","title","data","create_root","parseNearAmount","related_node_id","relation","create_node","relation_from","relation_to","create_relation","parseNode","item","x","y","index","account_id","media","length","svg","parseLink","n","r","Array","i","relations","push","source","label","split","parseInt","CreateRootModal","rootId","setRootId","show","setShow","handleClose","defaultMedia","defaultDataUrl","useState","setData","updateInputValue","evt","changeData","value","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","placeholder","onChange","autoFocus","rows","defaultValue","src","alt","style","maxHeight","maxWidth","Footer","Button","createRoot","graphData","setGraphData","nodes","setNodes","setLoading","showCreateModel","setShowCreateModel","roots","setRoots","selectedMenu","setSelectedMenu","links","setLinks","startAngle","Math","PI","getRoots","useCallback","get_root_list","console","log","error","getRootNode","originAngle","node","relation_links","angle","sin","cos","useEffect","marginTop","width","minHeight","float","marginRight","lineHeight","marginLeft","map","key","padding","ViewNodeModal","setNode","isCreate","setIsCreate","createNode","storage","Container","Row","Col","xs","md","color","CreateRelationModal","nodeId","setNodeId","relatedNodeId","setRelatedNodeId","setRelation","createRelation","NearGraph","names","setNames","showViewModel","setShowViewModel","search","InputGroup","Text","FormControl","event","bind","config","height","nodeHighlightBehavior","linkHighlightBehavior","staticGraphWithDragAndDrop","maxZoom","minZoom","zoom","focusZoom","fontSize","highlightFontSize","highlightFontWeight","highlightStrokeColor","labelProperty","strokeWidth","labelPosition","link","highlightColor","renderLabel","semanticStrokeWidth","d3","gravity","linkLength","disableLinkForce","onClickNode","onClickLink","onZoomChange","prevZoom","newZoom","onRightClickNode","preventDefault","toast","Cover","description","coverImg","background","defaultProps","App","balance","setBalance","getBalance","Nav","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.45323e7c.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"pre1.knowledge_graph.testnet\";\nfunction environment(env) {\n  switch (env) {\n    case \"mainnet\":\n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\":\n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;\n","import environment from \"./config\";\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst nearEnv = environment(\"testnet\");\n\nexport async function initializeContract() {\n  const near = await connect(\n    Object.assign(\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\n      nearEnv\n    )\n  );\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      // List here all view methods\n      viewMethods: [\"get_root_list\", \"get_node\", \"get_nodes\", \"search_name\"],\n      // List call methods that change state\n      changeMethods: [\"create_root\", \"create_node\", \"create_relation\"],\n    }\n  );\n}\n\nexport async function accountBalance() {\n  return formatNearAmount(\n    (await window.walletConnection.account().getAccountBalance()).total,\n    2\n  );\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\n\nconst Wallet = ({ address, amount, symbol, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border rounded-pill py-1\"\n          >\n            {amount ? (\n              <>\n                {amount} <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">{address}</span>\n              </Stack>\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: \"\",\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };\n","import { v4 as uuid4 } from \"uuid\";\nimport { parseNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst GAS = 100000000000000;\n\nexport function getRootListPagnation(from_index, limit) {\n  return window.contract.get_root_list(from_index, limit);\n}\n\nexport function getRoots() {\n    return window.contract.get_root_list();\n}\n\nexport function getNodes(nodes) {\n  return window.contract.get_nodes({nodes: nodes});\n}\n\nexport function getNode(node_id) {\n  return window.contract.get_node({node_id: node_id});\n}\n\nexport function searchName(name) {\n  return window.contract.search_name({name: name, absolute: false})\n}\n\nexport async function createRoot(title, data) {\n  await window.contract.create_root({ title: title, data: data }, GAS, parseNearAmount(\"0.005\"));\n}\n\nexport async function createNode(related_node_id, data, relation) {\n  await window.contract.create_node({ related_node_id: related_node_id, data: data, relation_from: relation, relation_to: relation }, GAS, parseNearAmount(\"0.01\"));\n}\n\nexport async function createRelation(node_id, related_node_id, relation) {\n  await window.contract.create_relation({ node_id: node_id, related_node_id: related_node_id, relation_from: relation, relation_to: relation }, GAS, parseNearAmount(\"0.01\"));\n}","export function emptyGraph() {\n    return {\n        nodes: [],\n        links: [],\n    };\n}\n\nexport function genLinkIndex(n, r) {\n    let a = parseInt(n);\n    let b = parseInt(r);\n    if (a > b) {\n        return r + \"@\" + n;\n    } else {\n        return n + \"@\" + r;\n    }\n}\n\nexport function parseNode(item, x, y) {\n    var data = {\n        id: item.index,\n        name: item.name,\n        account_id: item.account_id,\n        x: x,\n        y: y\n    }\n    if(item.media.length > 0) {\n        data.svg = item.media;\n    }\n    if(item.data.length > 0) {\n        data.href = item.data;\n    }\n    return data\n}\n\nexport function parseLink(item) {\n    var data = Array();\n    for(let i=0; i<item.relations.length; i++)\n    {\n        data.push({\n            source: item.index,\n            target: item.relations[i][1],\n            label: item.relations[i][0].split(\"@\")[0],\n            index: genLinkIndex(item.index, item.relations[i][1])\n        })\n    }\n    return data;\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n    createRoot\n} from \"../../utils/api\";\nimport { InputGroup, Button, FormControl, Modal, Form } from \"react-bootstrap\";\n\nexport const CreateRootModal = ({rootId, setRootId, show, setShow}) => {\n    const handleClose = () => setShow(false);\n    const defaultMedia = \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Pomegranate_Juice_%282019%29.jpg/440px-Pomegranate_Juice_%282019%29.jpg\";\n    const defaultDataUrl = \"https://en.wikipedia.org/wiki/Pomegranate\";\n    const [data, setData] = useState({\"title\": \"\",\n    \"data\": {\n        \"name\": \"\",\n        \"media\": defaultMedia,\n        \"data\": defaultDataUrl\n    }});\n\n    const updateInputValue = (evt) => {\n        // console.log(evt.target.id, evt.target.value);\n        var changeData = {...data}\n        if(evt.target.id == \"title\") {\n            changeData[evt.target.id] = evt.target.value;\n        } else {\n            changeData[\"data\"][evt.target.id] = evt.target.value;\n        }\n        setData(changeData);\n    }\n\n    const sumbitMint = () => {\n        setShow(false);\n        createRoot(data[\"title\"], data[\"data\"]);\n    }\n\n    return (\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Create a new graph on Near now!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group className=\"mb-3\" controlId=\"title\">\n                <Form.Label>Title (Unique)</Form.Label>\n                <Form.Control\n                  placeholder=\"Title of your graph\"\n                  onChange={updateInputValue}\n                  autoFocus\n                />\n              </Form.Group>\n              <h3>Root Node infomation</h3>\n              <Form.Group\n                className=\"mb-3\"\n                controlId=\"name\"\n              >\n                <Form.Label>Name</Form.Label>\n                <Form.Control placeholder=\"Name of the root node\" onChange={updateInputValue}/>\n              </Form.Group>\n              \n              <Form.Group\n              className=\"mb-3\"\n              controlId=\"media\"\n            >\n              <Form.Label>Media Url (Optional, support ipfs upload later)</Form.Label>\n              <Form.Control as=\"textarea\" rows={3} defaultValue={defaultMedia}  onChange={updateInputValue} />\n              <img src={data[\"data\"][\"media\"]} alt=\"Media\" style={{ maxHeight: \"250px\", maxWidth: \"440px\" }}></img>\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"data\"\n            >\n            <Form.Label>Data Url (Optional)</Form.Label>\n              <Form.Control as=\"textarea\" rows={3} defaultValue={defaultDataUrl}  onChange={updateInputValue} />\n            </Form.Group>\n\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n              <p>* You need to paid for the storage, the contract will refund the extra cost after minting. Storage usage will record and will refund when burn in future. </p>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={sumbitMint}>\n              I get it, mint now!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n    );\n  }\n  \nexport default CreateRootModal;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  getRoots as getRootList,\n  getNode, getNodes\n} from \"../../utils/api\";\nimport {\n  emptyGraph, parseLink, parseNode, genLinkIndex\n} from \"../../utils/graph\";\nimport { IoReloadSharp, IoAddCircleOutline } from 'react-icons/io5';\nimport { link } from \"fs\";\nimport CreateRootModal from \"./CreateRootModal.js\"\n\n\nexport const Menu = ({graphData, setGraphData, rootId, setRootId, nodes, setNodes}) => {\n  const [loading, setLoading] = useState(false);\n  const [showCreateModel, setShowCreateModel] = useState(false);\n  const [roots, setRoots] = useState([]);\n  const [selectedMenu, setSelectedMenu] = useState([]);\n  // const [nodes, setNodes] = useState({});\n  const [links, setLinks] = useState({});\n  const centerX = 750;\n  const centerY = 250;\n  const startAngle = Math.PI * 3 / 8;\n\n  const getRoots = useCallback(async () => {\n    try {\n      setLoading(true);\n      setRoots(await getRootList());\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setLoading(false);\n    }\n  });\n\n  const onClickMenu = (key) => {\n    setSelectedMenu(key)\n    setRootId(key);\n  }\n\n  const getRootNode = useCallback(async (node_id, x, y, originAngle) => {\n    try {\n      if(x === centerX) {\n        setNodes({});\n        setLinks({});\n        graphData = emptyGraph();\n      }\n      let node = await getNode(node_id);\n      if(node.index in nodes) {\n        // repeat loading\n        return\n      }\n      graphData.nodes.push(parseNode(node, x, y));\n      nodes[node.index] = node;\n      setNodes(nodes);\n      // console.log(\"node.relations.length\", node.relations.length)\n      if(node.relations.length > 0) {\n        let relation_links = parseLink(node);\n        for(let i=0;i<relation_links.length;i++) {\n          if(relation_links[i].index in links) {\n            continue;\n          }\n          if(relation_links[i].target in nodes) {\n            graphData.links.push(relation_links[i]);\n            links[relation_links[i].index] = relation_links[i];\n          }\n        }\n        setLinks(links);\n        let angle = Math.PI / node.relations.length;\n        var current_angle = Math.PI * 3 / 8;\n        let r = 100;\n        for(let i=0;i<node.relations.length;i++) {\n          let related_node_id = node.relations[i][1];\n          // console.log(\"related\", related_node_id)\n          if(!(related_node_id in nodes)) {\n            console.log(\"await\", related_node_id)\n            let n = await getRootNode(related_node_id, x + r*Math.sin(originAngle), y + r*Math.cos(originAngle), originAngle + Math.PI / 4);\n            originAngle += angle;\n          }\n        }        \n      }\n      console.log(graphData);\n      setGraphData(graphData);\n      // start to get relations\n      \n    } catch (error) {\n      console.log({ error });\n    } finally {\n      //\n    }\n  });\n  \n  useEffect(() => {\n    getRoots();\n  }, []);\n\n  useEffect(() => {\n    if(rootId == \"\" && roots.length != 0) {\n      setRootId(roots[0]?.index);\n      return;\n    }\n  }, [roots]);\n\n  useEffect(() => {\n    if(rootId == \"\") {\n      return;\n    }\n    // load root first\n    getRootNode(rootId, centerX, centerY, startAngle);\n  }, [rootId]);\n\n  return (\n    <div className=\"menu\">\n      <CreateRootModal rootId={rootId} setRootId={setRootId} show={showCreateModel} setShow={setShowCreateModel} >\n      </CreateRootModal>\n      <div style={{marginTop: \"5px\", width: \"100%\", minHeight: \"24px\"}}>\n        <div style={{float: \"right\", marginRight: \"10px\"}} onClick={getRoots}>\n          <IoReloadSharp />\n        </div>\n      </div>\n      \n      <div className=\"create_root_bar\" onClick={() => { setShowCreateModel(true) }}>\n        <IoAddCircleOutline style={{marginTop: \"4px\"}} />\n        <span className=\"black_border_bottom\" style={{lineHeight: \"24px\", marginLeft: \"5px\"}}>Create new graph</span>\n      </div>\n\n      <div style={{marginTop: \"15px\"}}>\n        {roots.map(item => (\n          <div className={selectedMenu === item.index ? 'item_selected' : 'item'} key={item.index} onClick={() => { onClickMenu(item.index) }} style={{ padding: \"5px\" }}>\n            { item.name }\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Menu;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n    createNode\n} from \"../../utils/api\";\nimport { Button, Modal, Form, Container, Row, Col } from \"react-bootstrap\";\nimport { IoChevronForwardSharp } from 'react-icons/io5';\n\nexport const ViewNodeModal = ({node, setNode, nodes, show, setShow}) => {\n    const handleClose = () => setShow(false);\n    const defaultMedia = \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Pomegranate_Juice_%282019%29.jpg/440px-Pomegranate_Juice_%282019%29.jpg\";\n    const defaultDataUrl = \"https://en.wikipedia.org/wiki/Pomegranate\";\n    const [data, setData] = useState({\n        \"data\": {\n            \"name\": \"\",\n            \"media\": defaultMedia,\n            \"data\": defaultDataUrl\n        },\n        \"relation\": \"\"\n    });\n    const [isCreate, setIsCreate] = useState(false);\n\n    const updateInputValue = (evt) => {\n        // console.log(evt.target.id, evt.target.value);\n        var changeData = {...data}\n        if(evt.target.id == \"relation\") {\n            changeData[evt.target.id] = evt.target.value;\n        } else {\n            changeData[\"data\"][evt.target.id] = evt.target.value;\n        }\n        setData(changeData);\n    }\n\n    const sumbitMint = () => {\n        setShow(false);\n        createNode(node.index, data[\"data\"], data[\"relation\"]);\n    }\n\n    return (\n        <>\n        { isCreate ? (\n            <Modal size=\"lg\" show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Create a new Node related on {node.name} [#{node.index}] </Modal.Title> \n              <div style={{ marginLeft: \"25px\" }} onClick={() => { setIsCreate(false) }} >\n               <span className=\"black_border_bottom\">Back to view</span> <IoChevronForwardSharp/>\n              </div>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"relation\"\n                >\n                  <Form.Label>Relation</Form.Label>\n                  <Form.Control placeholder=\"Relation with related node, such as 'friends'\" onChange={updateInputValue}/>\n                </Form.Group>\n                <h3>Node infomation</h3>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"name\"\n                >\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control placeholder=\"Name of the node\" onChange={updateInputValue}/>\n                </Form.Group>\n                \n                <Form.Group\n                className=\"mb-3\"\n                controlId=\"media\"\n              >\n                <Form.Label>Media Url (Optional, support ipfs upload later)</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} defaultValue={defaultMedia}  onChange={updateInputValue} />\n                <img src={data[\"data\"][\"media\"]} alt=\"Media\" style={{ maxHeight: \"250px\", maxWidth: \"440px\" }}></img>\n              </Form.Group>\n  \n              <Form.Group\n                className=\"mb-3\"\n                controlId=\"data\"\n              >\n              <Form.Label>Data Url (Optional)</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} defaultValue={defaultDataUrl}  onChange={updateInputValue} />\n              </Form.Group>\n  \n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <p>* You need to paid for the storage, the contract will refund the extra cost after minting. Storage usage will record and will refund when burn in future. </p>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" onClick={sumbitMint}>\n                I get it, mint now!\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        ) : (\n            <Modal size=\"lg\" show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Node {node.name} [#{node.index}]</Modal.Title>\n            <Button variant=\"primary\" onClick={() => { setIsCreate(true) }} style={{ marginLeft: \"25px\" }}>\n              Create Node\n            </Button>\n          </Modal.Header>\n          <Modal.Body>\n          <img src={node.media} alt=\"Media\" style={{ maxHeight: \"250px\", maxWidth: \"440px\" }}></img>\n          <p>Name: {node.name}</p>\n          <p>ID: #{node.index}</p>\n          <p>Data: <a href={node.data} target=\"_blank\">view</a> </p>\n          <p>Current owner: <a href={\"https://explorer.testnet.near.org/accounts/\" + node.account_id} target=\"_blank\">{node.account_id}</a></p>\n          <p>Deposit: {node.storage} yoctoⓃ</p>\n          <h3>Relations</h3>\n          <p>click ID to view node</p>\n          <Container>\n                <Row>\n                    <Col xs={4} md={2}>ID</Col>\n                    <Col xs={4} md={2}>relation</Col>\n                    <Col xs={4} md={2}>name</Col>\n                    <Col xs={4} md={2}>Media</Col>\n                    <Col xs={4} md={2}>Data</Col>\n                </Row>\n          {node.relations.map(item => (\n              <>\n              { item[1] in nodes ? (\n                <Row key={item[1]}>\n                    <Col xs={4} md={2} onClick={() => { setNode(nodes[item[1]]) }} style={{color: \"blue\"}}>\n                        <b>#{nodes[item[1]].index}</b>\n                    </Col>\n                    <Col xs={4} md={2}>\n                        {item[0].split(\"@\")[0]}\n                    </Col>\n                    <Col xs={4} md={2}>\n                        {nodes[item[1]].name}\n                    </Col>\n                    <Col xs={4} md={2}>\n                        <img src={nodes[item[1]].media} alt=\"Media\" style={{ maxHeight: \"75px\", maxWidth: \"75px\" }}></img>\n                    </Col>\n                    <Col xs={4} md={2}>\n                        <a href={nodes[item[1]].data} target=\"_blank\">view</a>\n                    </Col>\n                </Row>\n              ) : (\n                <></>\n              ) }\n              </>\n           ))}\n            </Container>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        ) }\n        </>\n    );\n  }\n  \nexport default ViewNodeModal;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n    createRelation\n} from \"../../utils/api\";\nimport { Button, Modal, Form, Container, Row, Col } from \"react-bootstrap\";\n\nexport const CreateRelationModal = ({nodes, nodeId, setNodeId, relatedNodeId, setRelatedNodeId, show, setShow}) => {\n    const handleClose = () => {\n        setNodeId(\"\");\n        setRelatedNodeId(\"\");\n        setShow(false);\n    };\n    const defaultMedia = \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Pomegranate_Juice_%282019%29.jpg/440px-Pomegranate_Juice_%282019%29.jpg\";\n    const defaultDataUrl = \"https://en.wikipedia.org/wiki/Pomegranate\";\n    const [relation, setRelation] = useState(\"\");\n\n    const updateInputValue = (evt) => {\n        setRelation(evt.target.value);\n    }\n\n    const sumbitMint = () => {\n        setShow(false);\n        createRelation(nodeId, relatedNodeId, relation);\n    }\n\n    return (\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>{nodeId != \"\" && relatedNodeId != \"\" ? (<>Create Relation: {nodes[nodeId].name} #{nodeId} to {nodes[relatedNodeId].name} #{relatedNodeId}</>):(<></>)}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          {nodeId != \"\" && relatedNodeId != \"\" ? ( <Container>\n                <Row>\n                    <Col xs={12} md={4}>\n                    <img src={nodes[nodeId].media} alt=\"Media\" style={{ maxHeight: \"250px\", maxWidth: \"440px\" }}></img>\n                    <p>Name: {nodes[nodeId].name}</p>\n                    <p>ID: #{nodes[nodeId].index}</p>\n                    <p>Data: <a href={nodes[nodeId].data} target=\"_blank\">view</a> </p>\n                    <p>Current owner: {nodes[nodeId].account_id}</p>\n                    <p>Deposit: {nodes[nodeId].storage} yoctoⓃ</p>\n                    </Col>\n                    <Col xs={12} md={4}>\n                    <img src={nodes[relatedNodeId].media} alt=\"Media\" style={{ maxHeight: \"250px\", maxWidth: \"440px\" }}></img>\n                    <p>Name: {nodes[relatedNodeId].name}</p>\n                    <p>ID: #{nodes[relatedNodeId].index}</p>\n                    <p>Data: <a href={nodes[relatedNodeId].data} target=\"_blank\">view</a> </p>\n                    <p>Current owner: {nodes[relatedNodeId].account_id}</p>\n                    <p>Deposit: {nodes[relatedNodeId].storage} yoctoⓃ</p>\n                    </Col>\n                </Row>\n            </Container>\n            ):(<></>)}\n            <Form>\n                <Form.Group\n                  className=\"mb-3\"\n                  controlId=\"relation\"\n                >\n                  <Form.Label>Relation</Form.Label>\n                  <Form.Control placeholder=\"Relation with related node, such as 'friends'\" onChange={updateInputValue}/>\n                </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n              <p>* You need to paid for the storage, the contract will refund the extra cost after minting.</p>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={sumbitMint}>\n              I get it, mint now!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n    );\n  }\n  \nexport default CreateRelationModal;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport { toast } from \"react-toastify\";\nimport { InputGroup, Button, FormControl } from \"react-bootstrap\";\nimport { IoSearchOutline } from 'react-icons/io5';\nimport {\n  searchName\n} from \"../../utils/api\";\nimport ViewNodeModal from \"./ViewNodeModal.js\"\nimport CreateRelationModal from \"./CreateRelationModal.js\"\n\nexport const NearGraph = ({\n  graphData, setRootId, nodes\n}) => {\n    const [nodeId, setNodeId] = useState(\"\");\n    const [relatedNodeId, setRelatedNodeId] = useState(\"\");\n\n    const [loading, setLoading] = useState(false);\n    const [names, setNames] = useState([]);\n    const [node, setNode] = useState({\n      index: '',\n      name: '',\n      media: '',\n      account_id: '',\n      data: '',\n      relations: [],\n      storage: '0'\n    });\n    const [showViewModel, setShowViewModel] = useState(false);\n    const [showCreateModel, setShowCreateModel] = useState(false);\n\n    const graphConfig = {\n      height: 700,\n      width: 1500,\n      nodeHighlightBehavior: true,\n      linkHighlightBehavior: true,\n      staticGraphWithDragAndDrop: true,\n      maxZoom: 4,\n      minZoom: 1.6,\n      zoom: 1.8,\n      focusZoom: 2,\n      node: {\n          fontSize: 8,\n          highlightFontSize: 12,\n          highlightFontWeight: \"bold\",\n          highlightStrokeColor: \"blue\",\n          labelProperty: \"name\",\n          size: 400,\n          strokeWidth: 2,\n          labelPosition: \"bottom\"\n      },\n      link: {\n          highlightColor: \"blue\",\n          renderLabel: true,\n          highlightFontWeight: \"bold\",\n          semanticStrokeWidth: true,\n          fontSize: 8,\n          labelPosition: \"center\"\n      },\n      d3: {\n          gravity: -400,\n          linkLength: 180,\n          disableLinkForce: true,\n      },\n  };\n\n    const onClickNode = function(nodeId) {\n      console.log(`Clicked node ${nodeId}`);\n      if(nodeId in nodes) {\n        setNode(nodes[nodeId]);\n        setShowViewModel(true);\n      }\n    };\n\n    const onClickLink = function(source, target) {\n      console.log(`Clicked link between ${source} and ${target}`);\n    };\n\n    const onRightClickNode = (event, id, node) => {\n      event.preventDefault();\n      // toast(`Right clicked node ${id} in position (${node.x}, ${node.y})`);\n      if(id in nodes) {\n        if(nodeId == id) {\n          toast(`cancel relate node ${nodes[id].name} #${id}`);\n          setNodeId(\"\");\n          setRelatedNodeId(\"\");\n          return;\n        }\n        if(nodeId == \"\") {\n          toast(`Selected relate node ${nodes[id].name} #${id}`);\n          setNodeId(id);\n          setRelatedNodeId(\"\");\n          return;\n        }\n        toast(`Selected relate node ${nodes[id].name} #${id}`);\n        setRelatedNodeId(id);\n        setShowCreateModel(true);\n      }\n    };\n\n    const onZoomChange = (prevZoom, newZoom) => {\n      console.log(prevZoom, newZoom);\n    };\n\n    const search = useCallback(async (name) => {\n      try {\n        setNames(await searchName(name));\n      } catch (error) {\n        console.log({ error });\n      }\n    });\n  \n    const searchWordChange = (event) => {\n      if(event.target.value == '')\n      {\n        setNames([]);\n      } else {\n        search(event.target.value);\n      }\n    }\n\n    const onClickSearchItem = (key) => {\n      setNames([]);\n      setRootId(key)\n    }\n\n    return (\n      <div className=\"near_graph\" style={{padding: \"5px\"}}>\n        <ViewNodeModal nodes={nodes} setNode={setNode} node={node} setRootId={setRootId} show={showViewModel} setShow={setShowViewModel} ></ViewNodeModal>\n        <CreateRelationModal show={showCreateModel} setShow={setShowCreateModel} nodes={nodes} nodeId={nodeId} setNodeId={setNodeId} \n              relatedNodeId={relatedNodeId} setRelatedNodeId={setRelatedNodeId}></CreateRelationModal>\n        <div style={{padding: \"15px 15px 0px 15px\"}}>\n          <p>Right click nodes to create relation between them.</p>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Text> \n              <IoSearchOutline />\n              Search\n            </InputGroup.Text>\n            <FormControl\n              onChange={searchWordChange.bind(this)}\n              placeholder=\"Enter keyword\"\n              aria-label=\"Enter keyword\"\n              aria-describedby=\"basic-addon2\"\n            />\n            {names.length > 0 ? (\n            <div className=\"search_result\">\n              {names.map(item => (\n                <div className=\"result_item item\" key={item[1]} onClick={() => { onClickSearchItem(item[1]) }}>\n                  { item[0] }\n                </div>\n              ))}\n          </div>\n          ) : (<></>)}\n          </InputGroup>\n        </div>\n        <Graph\n          className=\"graph_svg\"\n          id=\"graph-id\" // id is mandatory\n          data={graphData}\n          config={graphConfig}\n          onClickNode={onClickNode}\n          onClickLink={onClickLink}\n          onZoomChange={onZoomChange}\n          onRightClickNode={onRightClickNode}\n        />\n      </div>\n    )\n}\n\nexport default NearGraph;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst Cover = ({ name, description, login, coverImg }) => {\n  if ((name, login, coverImg)) {\n    return (\n      <div\n        className=\"d-flex justify-content-center flex-column text-center \"\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\n      >\n        <div className=\"mt-auto text-light mb-5\">\n          <div\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\n            style={{ maxWidth: \"320px\" }}\n          >\n            <img src={coverImg} alt=\"\" />\n          </div>\n          <h1>{name}</h1>\n          <h4>{description}</h4>\n          <p style={{marginTop: \"30px\"}}>Please connect your wallet to continue.</p>\n          <Button\n            onClick={login}\n            variant=\"outline-light\"\n            className=\"rounded-pill px-3 mt-3\"\n          >\n            Connect Wallet\n          </Button>\n        </div>\n        <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nCover.propTypes = {\n  name: PropTypes.string,\n};\n\nCover.defaultProps = {\n  name: \"\",\n};\n\nexport default Cover;\n","export default __webpack_public_path__ + \"static/media/logo.4e487ea7.png\";","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { login, logout as destroy, accountBalance } from \"./utils/near\";\nimport Wallet from \"./components/Wallet\";\nimport { Notification } from \"./components/utils/Notifications\";\nimport Menu from \"./components/graph/Menu\";\nimport NearGraph from \"./components/graph/NearGraph\";\nimport Cover from \"./components/utils/Cover\";\nimport coverImg from \"./assets/img/logo.png\";\nimport {\n  emptyGraph\n} from \"./utils/graph\";\nimport \"./App.css\";\n\nconst App = function AppWrapper() {\n  const account = window.walletConnection.account();\n\n  const [balance, setBalance] = useState(\"0\");\n  const [graphData, setGraphData] = useState(emptyGraph());\n  const [rootId, setRootId] = useState(\"\");\n  const [nodes, setNodes] = useState({});\n  const getBalance = useCallback(async () => {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  });\n\n  useEffect(() => {\n    getBalance();\n  }, [getBalance]);\n\n  return (\n    <>\n      <Notification />\n      {account.accountId ? (\n        <>\n          <Nav className=\"justify-content-between align-items-center pt-3 pb-3 mb-2\" style={{ backgroundColor: \"black\", padding: \"15px\" }}>\n            <Nav.Item>\n              <a href=\"https://www.zsrtech.com\"><img className=\"nav-icon\" src={coverImg} alt=\"\" /></a>\n            </Nav.Item>\n            <Nav.Item>\n              <Wallet\n                address={account.accountId}\n                amount={balance}\n                symbol=\"NEAR\"\n                destroy={destroy}\n              />\n            </Nav.Item>\n          </Nav>\n          <div className=\"main\">\n            <Menu graphData={graphData} setGraphData={setGraphData} rootId={rootId} setRootId={setRootId} nodes={nodes} setNodes={setNodes} />\n            <NearGraph graphData={graphData} setRootId={setRootId} nodes={nodes} />\n          </div>\n        </>\n      ) : (\n        <Cover name=\"Near Knowledge Graph\" description=\"Mint and build knowledge ecosystem worldwide\" login={login} coverImg={coverImg} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./utils/near\";\n\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();\n"],"sourceRoot":""}